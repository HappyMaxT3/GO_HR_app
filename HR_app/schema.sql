CREATE TABLE Employees_Education_Types (
    EET_ID NUMERIC(1) PRIMARY KEY,
    EET_NAME VARCHAR(50) NOT NULL
);
CREATE TABLE Employees_Contacts_Types (
    ECT_ID NUMERIC(1) PRIMARY KEY,
    ECT_TYPE VARCHAR(50) NOT NULL
);
CREATE TABLE Absences_Types (
    AT_ID NUMERIC(1) PRIMARY KEY,
    AT_TYPE VARCHAR(20) NOT NULL
);
CREATE TABLE Departments (
    D_ID VARCHAR(12) PRIMARY KEY,
    D_NAME VARCHAR(100) NOT NULL,
    D_ID_DIR NUMERIC(4)  -- Foreign key to be added after Employees table
);
CREATE TABLE Departments_Phones (
    DP_ID VARCHAR(12) NOT NULL,
    DP_PHONE VARCHAR(40) NOT NULL,
    PRIMARY KEY (DP_ID, DP_PHONE),
    FOREIGN KEY (DP_ID) REFERENCES Departments(D_ID)
);
CREATE TABLE Positions (
    P_NAME VARCHAR(100) PRIMARY KEY,
    P_SAL NUMERIC(10, 2) NOT NULL CHECK (P_SAL > 0)
);
CREATE TABLE Employees (
    E_ID NUMERIC(4) PRIMARY KEY,
    D_ID VARCHAR(12) NOT NULL,
    E_FNAME VARCHAR(50) NOT NULL,
    E_LNAME VARCHAR(50) NOT NULL,
    E_PASP CHAR(10) NOT NULL UNIQUE,
    E_DATE DATE NOT NULL,
    E_GIVEN VARCHAR(50) NOT NULL,
    E_GENDER CHAR(1) NOT NULL CHECK (E_GENDER IN ('м', 'ж')),
    E_INN CHAR(12) NOT NULL UNIQUE,
    E_SNILS CHAR(11) NOT NULL UNIQUE,
    E_BORN DATE NOT NULL CHECK (E_BORN < CURRENT_DATE - INTERVAL '16 years'),
    E_HIRE DATE NOT NULL CHECK (E_HIRE <= CURRENT_DATE),
    P_NAME VARCHAR(100) NOT NULL,
    FOREIGN KEY (D_ID) REFERENCES Departments(D_ID),
    FOREIGN KEY (P_NAME) REFERENCES Positions(P_NAME)
);
for D_ID_DIR after Employees is created
ALTER TABLE Departments
ADD FOREIGN KEY (D_ID_DIR) REFERENCES Employees(E_ID);
CREATE TABLE Employees_Addresses (
    EA_ID_E NUMERIC(4) NOT NULL,
    EA_ADDR VARCHAR(100) NOT NULL,
    PRIMARY KEY (EA_ID_E, EA_ADDR),
    FOREIGN KEY (EA_ID_E) REFERENCES Employees(E_ID)
);
CREATE TABLE Employees_Education (
    EE_ID_E NUMERIC(4) NOT NULL,
    EE_TYPE NUMERIC(1) NOT NULL,
    EE_SPEC VARCHAR(100),
    EE_DIP CHAR(50),
    EE_END DATE NOT NULL CHECK (EE_END <= CURRENT_DATE),
    EE_NAME VARCHAR(100) NOT NULL,
    PRIMARY KEY (EE_ID_E, EE_TYPE, EE_END),
    FOREIGN KEY (EE_ID_E) REFERENCES Employees(E_ID),
    FOREIGN KEY (EE_TYPE) REFERENCES Employees_Education_Types(EET_ID)
);
CREATE TABLE Employees_Contacts (
    EC_ID_E NUMERIC(4) NOT NULL,
    EC_TYPE NUMERIC(1) NOT NULL,
    EC_MEAN VARCHAR(50) NOT NULL,
    PRIMARY KEY (EC_ID_E, EC_TYPE, EC_MEAN),
    FOREIGN KEY (EC_ID_E) REFERENCES Employees(E_ID),
    FOREIGN KEY (EC_TYPE) REFERENCES Employees_Contacts_Types(ECT_ID)
);
CREATE TABLE Staffing (
    S_ID_D VARCHAR(12) NOT NULL,
    S_NAME_P VARCHAR(100) NOT NULL,
    S_COUNT NUMERIC(4) NOT NULL CHECK (S_COUNT >= 0),
    PRIMARY KEY (S_ID_D, S_NAME_P),
    FOREIGN KEY (S_ID_D) REFERENCES Departments(D_ID),
    FOREIGN KEY (S_NAME_P) REFERENCES Positions(P_NAME)
);
CREATE TABLE Absences (
    A_ID NUMERIC(10) PRIMARY KEY,
    A_TYPE NUMERIC(1) NOT NULL,
    A_START DATE NOT NULL,
    A_END DATE,
    A_ID_E NUMERIC(4) NOT NULL,
    A_DOC VARCHAR(200) NOT NULL,
    FOREIGN KEY (A_TYPE) REFERENCES Absences_Types(AT_ID),
    FOREIGN KEY (A_ID_E) REFERENCES Employees(E_ID),
    CHECK (A_END IS NULL OR A_END > A_START)
);
-- Creating table for "Job"
CREATE TABLE Job (
    J_ID_D VARCHAR(12) NOT NULL,
    J_NAME_P VARCHAR(100) NOT NULL,
    J_ID NUMERIC(4) NOT NULL,
    J_START DATE NOT NULL,
    J_END DATE,
    J_DOC VARCHAR(200) NOT NULL,
    PRIMARY KEY (J_ID_D, J_NAME_P, J_ID),
    FOREIGN KEY (J_ID_D, J_NAME_P) REFERENCES Staffing(S_ID_D, S_NAME_P),
    FOREIGN KEY (J_ID) REFERENCES Employees(E_ID),
    CHECK (J_END IS NULL OR J_END > J_START)
);
